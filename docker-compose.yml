version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo:
    image: mongo
    ports:
      - "27017:27017"

  jobprocessor-api:
    build:
      context: .
      dockerfile: JobProcessor.API/Dockerfile
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - "5000:8080"
    env_file:
      - .env
    environment:
      DOTNET_RUNNING_IN_CONTAINER: "true"
      MONGO_CONNECTION_STRING: ${MONGO_CONNECTION_STRING}
      MONGO_DATABASE: ${MONGO_DATABASE}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}

  jobprocessor-worker:
    build:
      context: .
      dockerfile: JobProcessor.JobsWorker/Dockerfile
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    environment:
      MONGO_CONNECTION_STRING: ${MONGO_CONNECTION_STRING}
      MONGO_DATABASE: ${MONGO_DATABASE}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
    deploy:
      replicas: 3
    restart: unless-stopped